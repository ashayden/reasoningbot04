{"version":3,"sources":["index.js"],"names":["SliderContainer","styled","div","_templateObject","_taggedTemplateLiteral","Track","_templateObject2","Progress","_templateObject3","props","percentage","Handle","_templateObject4","Labels","_templateObject5","Label","span","_templateObject6","active","DepthSlider","_ref","options","value","setComponentValue","currentValue","setCurrentValue","useState","indexOf","length","useEffect","_jsxs","children","_jsx","map","option","onClick","handleClick","StreamlitDepthSlider","_ref2","args","window","Streamlit","ReactDOM","render","React","StrictMode","componentArgs","document","getElementById"],"mappings":"+LAIA,MAAMA,EAAkBC,IAAOC,IAAGC,MAAAC,YAAA,qEAM5BC,EAAQJ,IAAOC,IAAGI,MAAAF,YAAA,0GAOlBG,EAAWN,IAAOC,IAAGM,MAAAJ,YAAA,iHAGhBK,GAASA,EAAMC,aAMpBC,EAASV,IAAOC,IAAGU,MAAAR,YAAA,8SAOfK,GAASA,EAAMC,aAUnBG,EAASZ,IAAOC,IAAGY,MAAAV,YAAA,+HAQnBW,EAAQd,IAAOe,KAAIC,MAAAb,YAAA,yLACdK,GAASA,EAAMS,OAAS,UAAY,SAWzCC,EAAcC,IAA4C,IAA3C,QAAEC,EAAO,MAAEC,EAAK,kBAAEC,GAAmBH,EACxD,MAAOI,EAAcC,GAAmBC,mBAASJ,GAE3CZ,EADeW,EAAQM,QAAQH,IACDH,EAAQO,OAAS,GAAM,IAa3D,OANAC,qBAAU,KACJP,IAAUE,GACZC,EAAgBH,EAClB,GACC,CAACA,IAGFQ,eAAC9B,EAAe,CAAA+B,SAAA,CACdD,eAACzB,EAAK,CAAA0B,SAAA,CACJC,cAACzB,EAAQ,CAACG,WAAYA,IACtBsB,cAACrB,EAAM,CAACD,WAAYA,OAEtBsB,cAACnB,EAAM,CAAAkB,SACJV,EAAQY,KAAKC,GACZF,cAACjB,EAAK,CAEJG,OAAQgB,IAAWV,EACnBW,QAASA,IAtBED,KACnBT,EAAgBS,GAChBX,EAAkBW,EAAO,EAoBFE,CAAYF,GAAQH,SAElCG,GAJIA,SAQK,EAIhBG,EAAuBC,IAAkC,IAAjC,KAAEC,EAAI,kBAAEhB,GAAmBe,EACvD,OAAKE,OAAOC,UAKVT,cAACb,EAAW,CACVE,QAASkB,EAAKlB,QACdC,MAAOiB,EAAKjB,MACZC,kBAAmBA,IAPd,IAQL,EAINmB,IAASC,OACPX,cAACY,IAAMC,WAAU,CAAAd,SACfC,cAACK,EAAoB,CACnBE,KAAMC,OAAOC,UAAUK,cACvBvB,kBAAmBiB,OAAOC,UAAUlB,sBAGxCwB,SAASC,eAAe,Q","file":"static/js/main.d47593cc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from 'styled-components'\n\nconst SliderContainer = styled.div`\n  width: 100%;\n  padding: 20px 0;\n  position: relative;\n`\n\nconst Track = styled.div`\n  width: 100%;\n  height: 2px;\n  background: rgba(255, 255, 255, 0.2);\n  position: relative;\n`\n\nconst Progress = styled.div`\n  height: 100%;\n  background: #0066cc;\n  width: ${props => props.percentage}%;\n  position: absolute;\n  left: 0;\n  top: 0;\n`\n\nconst Handle = styled.div`\n  width: 24px;\n  height: 24px;\n  background: white;\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  left: ${props => props.percentage}%;\n  transform: translate(-50%, -50%);\n  cursor: pointer;\n  transition: transform 0.1s ease;\n\n  &:hover {\n    transform: translate(-50%, -50%) scale(1.1);\n  }\n`\n\nconst Labels = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n  position: relative;\n  padding: 0 12px;\n`\n\nconst Label = styled.span`\n  color: ${props => props.active ? '#0066cc' : '#fff'};\n  font-family: \"Source Sans Pro\", sans-serif;\n  font-size: 14px;\n  cursor: pointer;\n  transition: color 0.2s ease;\n\n  &:hover {\n    color: #0066cc;\n  }\n`\n\nconst DepthSlider = ({ options, value, setComponentValue }) => {\n  const [currentValue, setCurrentValue] = useState(value)\n  const currentIndex = options.indexOf(currentValue)\n  const percentage = (currentIndex / (options.length - 1)) * 100\n\n  const handleClick = (option) => {\n    setCurrentValue(option)\n    setComponentValue(option)\n  }\n\n  useEffect(() => {\n    if (value !== currentValue) {\n      setCurrentValue(value)\n    }\n  }, [value])\n\n  return (\n    <SliderContainer>\n      <Track>\n        <Progress percentage={percentage} />\n        <Handle percentage={percentage} />\n      </Track>\n      <Labels>\n        {options.map((option) => (\n          <Label\n            key={option}\n            active={option === currentValue}\n            onClick={() => handleClick(option)}\n          >\n            {option}\n          </Label>\n        ))}\n      </Labels>\n    </SliderContainer>\n  )\n}\n\nconst StreamlitDepthSlider = ({ args, setComponentValue }) => {\n  if (!window.Streamlit) {\n    return null\n  }\n\n  return (\n    <DepthSlider\n      options={args.options}\n      value={args.value}\n      setComponentValue={setComponentValue}\n    />\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitDepthSlider\n      args={window.Streamlit.componentArgs}\n      setComponentValue={window.Streamlit.setComponentValue}\n    />\n  </React.StrictMode>,\n  document.getElementById('root')\n) "],"sourceRoot":""}